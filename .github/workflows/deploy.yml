name: React build flows
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout main source code
        uses: actions/checkout@main

      - name: Cache node modules
        uses: actions/cache@main
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: npm install

      - name: create env file
        run: |
          touch .env
          echo REACT_APP_API_BASE_URL=${{ secrets.REACT_APP_API_BASE_URL }} >> .env
          echo REACT_APP_API_LOGIN_URL=${{ secrets.REACT_APP_API_LOGIN_URL }} >> .env
          echo REACT_APP_API_TOKEN_URL=${{ secrets.REACT_APP_API_TOKEN_URL}} >> .env
          echo REACT_APP_API_VALIDATION_URL=${{ secrets.REACT_APP_API_VALIDATION_URL}} >> .env
          echo REACT_APP_JWT_SECRET_KEY=${{ secrets.REACT_APP_JWT_SECRET_KEY }} >> .env
          echo REACT_APP_API_LETTERS_STATUS=${{ secrets.REACT_APP_API_LETTERS_STATUS }} >> .env
          echo REACT_APP_API_LETTER=${{ secrets.REACT_APP_API_LETTER }} >> .env
          echo REACT_APP_API_SEARCH_SONG=${{ secrets.REACT_APP_API_SEARCH_SONG }} >> .env
          echo REACT_APP_API_MY_PAGE=${{ secrets.REACT_APP_API_MY_PAGE }} >> .env
          echo REACT_APP_API_ACCOUNT_DELETE=${{ secrets.REACT_APP_API_ACCOUNT_DELETE }} >> .env
          echo REACT_APP_API_INITIALIZE_LETTERS=${{ secrets.REACT_APP_API_INITIALIZE_LETTERS }} >> .env
          echo REACT_APP_API_READY_TO_LETTER=${{ secrets.REACT_APP_API_READY_TO_LETTER }} >> .env

      - name: NPM build
        run: npm run build

      - name: Zip build file and deploy scripts
        run: |
          zip -r songrequest.zip ./build/* ./appspec.yml ./after-install.sh ./before-install.sh

      - name: S3 deployment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
        run: |
          aws s3 cp \
            --region ap-northeast-2 \
            songrequest.zip s3://${{ secrets.AWS_S3_BUCKET_NAME }}

      - name: Configure aws credential
        uses: aws-actions/configure-aws-credential@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_DEPLOY_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_DEPLOY_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: Deploy ec2
        run: |
          aws deploy create-deployment \
            --application-name songrequest-frontend \
            --deployment-group-name songrequest-frontend-group \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --s3-location bucket=${{ secrets.AWS_S3_BUCKET_NAME }}, bundleType=zip, key=songrequest.zip

            echo "SUCCESS";
